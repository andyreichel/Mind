Limitations:
-Comments are included in loc changed
-repos file large files take a very long time to clone. This is a restriction of jgit: http://dev.eclipse.org/mhonarc/lists/jgit-dev/msg00689.html


Lessons learned:
- Sonar Web Api for Timemachine does not provide the historical data in a
file-specific base. That means that the data has to be collected after each sonar run.
- Development of Sonar Java Api will not be continued thats why we should use Web Api
-Resources set in two different versions differ
-Sonar Webapi cannot list all rules of a language so we have to specify all rulerepositories in a configfile

Conditions:
-Versions in Sonar have the same name as the branch in git

Tasks:
-Make everything open source.
-diff should compare on line level
-FILTER LOCTOUCHED=0
-use spermine
-COMMENT EVERYTHING


Key Decisions:
Question: In what frequency is the software being used
criteria: execution time
options: Running it as part of continuous integration
		Running it once to get the priority of rules
rational: Because the software is used to prioritize the rules over
a large timespan it is not necessary to run it in each building cycle thats why it is chosen
to design it as a run-once application.

Question: From where to I get the information to what version a bug is related? 
criteria: reliability of data;well-kept comments in scm and issuetracker
options: reading it from git; reading it from redmine
rational: because redmine already has a column that specifies the version where this defect was found it is easy to use it to correlate the version to the bug


Variables:
Number of defects: number of defects is the number of redmine issues that have a version specified. if the issueid is included in a commit message of git, all the affected files in this commit will be related to this bug.
Size: The size of the file 
